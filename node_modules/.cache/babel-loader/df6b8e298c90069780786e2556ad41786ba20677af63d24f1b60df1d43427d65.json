{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wasdp\\\\Desktop\\\\MyProgrammingLab\\\\Commute Compass\\\\Commute Compass - React Version\\\\Commute-Compass-Vercel\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { APIProvider, Map, useMap, useMapsLibrary } from '@vis.gl/react-google-maps';\nimport { PlaceAutocompleteClassic } from './autocomplete-classic';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst serverPort = 3001;\nconst googleMapsApiKey = \"AIzaSyDjpkA1wkyhf5VjzfkeIOqP9IzZLn55C80\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst center = {\n  lat: 49.8951,\n  lng: -97.1384\n};\n\n// Define a symbol using SVG path notation, with an opacity of 1.\nconst lineSymbol = {\n  path: \"M 0,-1 0,1\",\n  strokeOpacity: 1,\n  scale: 4\n};\nconst polylineOptions = {\n  geodesic: true,\n  strokeColor: '#FF0000',\n  strokeOpacity: 0,\n  strokeWeight: 2,\n  icons: [{\n    icon: lineSymbol,\n    offset: \"0\",\n    repeat: \"20px\"\n  }]\n};\nconst App = () => {\n  _s();\n  // const { isLoaded } = useJsApiLoader({\n  //   googleMapsApiKey: googleMapsApiKey,\n  //   libraries: libraries,\n  // });\n  const [origin, setOrigin] = useState('');\n  const [destination, setDestination] = useState('');\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [routePlans, setRoutePlans] = useState([]);\n  const [selectedPlanIndex, setSelectedPlanIndex] = useState(0);\n  const [scores, setScores] = useState([]);\n\n  // console.log(currentPosition);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(APIProvider, {\n      apiKey: googleMapsApiKey,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Commute Compass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Origin:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlaceAutocompleteClassic, {\n          onPlaceSelect: setOrigin,\n          currPos: currentPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Destination:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlaceAutocompleteClassic, {\n          onPlaceSelect: setDestination,\n          currPos: currentPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(GetRouteButton, {\n          origin: origin,\n          destination: destination,\n          setPlans: setRoutePlans,\n          setScores: setScores,\n          setSelected: setSelectedPlanIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: containerStyle,\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          defaultZoom: 12,\n          defaultCenter: center,\n          gestureHandling: 'greedy',\n          disableDefaultUI: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GetCurrentCoord, {\n        setPos: setCurrentPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Directions, {\n        currPos: currentPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RouteCards, {\n        routePlans: routePlans,\n        routeScores: scores,\n        setSelected: setSelectedPlanIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayRoute, {\n        routePlans: routePlans,\n        selectedPlanIndex: selectedPlanIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qxhfgVwpgLcmU/vk2PUmSCI7SIs=\");\n_c = App;\nfunction GetCurrentCoord({\n  setPos\n}) {\n  _s2();\n  React.useEffect(() => {\n    const fetchCurrentPosition = async () => {\n      try {\n        const pos = await getCurrentCoord();\n        setPos(pos);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCurrentPosition();\n  }, []);\n  const getCurrentCoord = () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const pos = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          resolve(pos);\n        }, () => {\n          console.error(\"Error: The Geolocation service failed.\");\n          reject(\"Error: The Geolocation service failed.\");\n        });\n      } else {\n        console.error(\"Error: Your browser doesn't support geolocation.\");\n        reject(\"Error: Your browser doesn't support geolocation.\");\n      }\n    });\n  };\n}\n_s2(GetCurrentCoord, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = GetCurrentCoord;\nfunction Directions({\n  currPos\n}) {\n  _s3();\n  // const places = useMapsLibrary('places');\n  // const routes = useMapsLibrary('routes');\n  // const mapsLib = useMapsLibrary('maps');\n  // const geocoding = useMapsLibrary('geocoding');\n  const markerLib = useMapsLibrary(\"marker\");\n  const [marker, setMarker] = useState();\n  const map = useMap();\n  React.useEffect(() => {\n    if (map) {\n      map.setCenter(currPos);\n      // Show user's location using the built-in dot\n      // setMarker(new markerLib.Marker({\n      //   position: currPos,\n      //   map: map,\n      //   title: 'Your Location',\n      // }));\n    }\n  }, [map, currPos]);\n}\n_s3(Directions, \"7oxWS9MVKL1tUjfzh84ybzF739U=\", false, function () {\n  return [useMapsLibrary, useMap];\n});\n_c3 = Directions;\nfunction GetRouteButton({\n  origin,\n  destination,\n  setPlans,\n  setScores,\n  setSelected\n}) {\n  // const geocoding = useMapsLibrary('geocoding');\n  // const routes = useMapsLibrary('routes');\n\n  const getCoordinates = formatedAddress => {\n    const latitude = formatedAddress.geometry.location.lat();\n    const longitude = formatedAddress.geometry.location.lng();\n    return [latitude, longitude];\n  };\n  const callMyFunction = async () => {\n    try {\n      const coordOrigin = getCoordinates(origin);\n      const coordDest = getCoordinates(destination);\n      console.log(coordOrigin);\n      const response = await fetch(`https://commute-compass-backend.vercel.app/myFunction`, {\n        method: 'POST',\n        mode: 'no-cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          origin: coordOrigin,\n          destination: coordDest\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log(data);\n      const [plans, routeScores] = data;\n      setPlans(plans);\n      setScores(routeScores);\n      setSelected(routeScores[0].planId - 1);\n      // displayRoute(plans[0]);\n    } catch (error) {\n      console.error('There has been a problem with your fetch operation:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: callMyFunction,\n    children: \"Get Route\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 10\n  }, this);\n}\n_c4 = GetRouteButton;\nfunction DisplayRoute({\n  routePlans,\n  selectedPlanIndex\n}) {\n  _s4();\n  const [directionsDisplays, setDirectionsDisplays] = useState([]);\n  const routes = useMapsLibrary('routes');\n  const map = useMap();\n  React.useEffect(() => {\n    if (map && routePlans) {\n      displayRoute(routePlans[selectedPlanIndex]);\n    }\n  }, [routePlans, selectedPlanIndex]);\n  const displayRoute = routeInfo => {\n    const directionsService = new routes.DirectionsService();\n\n    // Clear existing directions renderers\n    directionsDisplays.forEach(display => display.setMap(null));\n    setDirectionsDisplays([]);\n    const getGeographic = location => {\n      if (location.hasOwnProperty('stop')) {\n        return location.stop.centre.geographic;\n      } else if (location.hasOwnProperty('origin')) {\n        if (location.origin.hasOwnProperty('monument')) {\n          return location.origin.monument.address.centre.geographic;\n        } else if (location.origin.hasOwnProperty('point')) {\n          return location.origin.point.centre.geographic;\n        } else {\n          return location.origin.address.centre.geographic;\n        }\n      } else if (location.hasOwnProperty('destination')) {\n        if (location.destination.hasOwnProperty('monument')) {\n          return location.destination.monument.address.centre.geographic;\n        } else if (location.destination.hasOwnProperty('point')) {\n          return location.destination.point.centre.geographic;\n        } else {\n          return location.destination.address.centre.geographic;\n        }\n      }\n      return null;\n    };\n    const newDirectionsDisplays = [];\n    routeInfo.segments.forEach((segment, index) => {\n      console.log(segment);\n      if (segment.type === 'walk' || segment.type === 'transfer') {\n        const fromGeographic = getGeographic(segment.from);\n        const toGeographic = getGeographic(segment.to);\n        const request = {\n          origin: {\n            lat: parseFloat(fromGeographic.latitude),\n            lng: parseFloat(fromGeographic.longitude)\n          },\n          destination: {\n            lat: parseFloat(toGeographic.latitude),\n            lng: parseFloat(toGeographic.longitude)\n          },\n          travelMode: 'WALKING'\n        };\n        const polylineOptionsThis = segment.type === 'walk' || segment.type === 'transfer' ? polylineOptions : {};\n        const directionsDisplay = new routes.DirectionsRenderer({\n          map: map,\n          polylineOptions: polylineOptionsThis\n        });\n        newDirectionsDisplays.push(directionsDisplay);\n        directionsService.route(request, (result, status) => {\n          if (status === 'OK') {\n            directionsDisplay.setDirections(result);\n          }\n        });\n      } else if (segment.type === 'ride') {\n        const nextSeg = routeInfo.segments[index + 1];\n        const toGeographic = getGeographic(nextSeg.from);\n        const prevSeg = routeInfo.segments[index - 1];\n        const fromGeographic = getGeographic(prevSeg.to);\n        const request = {\n          origin: {\n            lat: parseFloat(fromGeographic.latitude),\n            lng: parseFloat(fromGeographic.longitude)\n          },\n          destination: {\n            lat: parseFloat(toGeographic.latitude),\n            lng: parseFloat(toGeographic.longitude)\n          },\n          travelMode: 'TRANSIT',\n          transitOptions: {\n            routingPreference: 'LESS_WALKING'\n          }\n        };\n        const directionsDisplay = new routes.DirectionsRenderer({\n          map: map\n        });\n        newDirectionsDisplays.push(directionsDisplay);\n        directionsService.route(request, (result, status) => {\n          if (status === 'OK') {\n            directionsDisplay.setDirections(result);\n          }\n        });\n      }\n    });\n    setDirectionsDisplays(newDirectionsDisplays);\n  };\n}\n_s4(DisplayRoute, \"kznHU9A4oiJQnkI7a2D9U266/NQ=\", false, function () {\n  return [useMapsLibrary, useMap];\n});\n_c5 = DisplayRoute;\nfunction RouteCards({\n  routePlans,\n  routeScores,\n  setSelected\n}) {\n  const cards = [];\n  for (let i = 0; i < routeScores.length; i++) {\n    const thisRoutePlan = routePlans[routeScores[i].planId - 1];\n    let routeText = thisRoutePlan.segments.map((segment, index) => {\n      let segmentText = '';\n      if (segment.type === 'ride') {\n        segmentText = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segment\",\n          children: [\"\\u25CF \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ride:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), \" Riding: \", segment.times.durations.riding, \" min, Bus: \", segment.route.key]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this);\n      } else if (segment.type === 'walk') {\n        segmentText = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segment\",\n          children: [\"\\u25CF \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Walk:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), \" Walking: \", segment.times.durations.walking, \" min\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this);\n      } else if (segment.type === 'transfer') {\n        segmentText = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segment\",\n          children: [\"\\u25CF \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Transfer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), \" Walking: \", segment.times.durations.walking, \" min, Waiting: \", segment.times.durations.waiting, \" min(\", segment.to.stop.isSheltered ? \"sheltered\" : \"unsheltered\", \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this);\n      }\n      return segmentText;\n    });\n    cards.push({\n      id: i + 1,\n      title: 'Route ' + (i + 1),\n      description: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 16\n          }, this), \" \", routeScores[i].score.toFixed(2), \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Time Outside:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 76\n          }, this), \" \", routeScores[i].totalTimeOutside, \" min\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segments\",\n          children: routeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)\n    });\n  }\n  const handleClick = index => {\n    setSelected(routeScores[index - 1].planId - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards-container\",\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      onClick: () => handleClick(card.id),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: card.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: card.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n}\n_c6 = RouteCards;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"GetCurrentCoord\");\n$RefreshReg$(_c3, \"Directions\");\n$RefreshReg$(_c4, \"GetRouteButton\");\n$RefreshReg$(_c5, \"DisplayRoute\");\n$RefreshReg$(_c6, \"RouteCards\");","map":{"version":3,"names":["React","useState","useRef","APIProvider","Map","useMap","useMapsLibrary","PlaceAutocompleteClassic","jsxDEV","_jsxDEV","serverPort","googleMapsApiKey","containerStyle","width","height","center","lat","lng","lineSymbol","path","strokeOpacity","scale","polylineOptions","geodesic","strokeColor","strokeWeight","icons","icon","offset","repeat","App","_s","origin","setOrigin","destination","setDestination","currentPosition","setCurrentPosition","routePlans","setRoutePlans","selectedPlanIndex","setSelectedPlanIndex","scores","setScores","className","children","apiKey","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","onPlaceSelect","currPos","GetRouteButton","setPlans","setSelected","defaultZoom","defaultCenter","gestureHandling","disableDefaultUI","GetCurrentCoord","setPos","Directions","RouteCards","routeScores","DisplayRoute","_c","_s2","useEffect","fetchCurrentPosition","pos","getCurrentCoord","error","console","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","_c2","_s3","markerLib","marker","setMarker","map","setCenter","_c3","getCoordinates","formatedAddress","geometry","location","callMyFunction","coordOrigin","coordDest","log","response","fetch","method","mode","headers","body","JSON","stringify","ok","Error","data","json","plans","planId","onClick","_c4","_s4","directionsDisplays","setDirectionsDisplays","routes","displayRoute","routeInfo","directionsService","DirectionsService","forEach","display","setMap","getGeographic","hasOwnProperty","stop","centre","geographic","monument","address","point","newDirectionsDisplays","segments","segment","index","type","fromGeographic","from","toGeographic","to","request","parseFloat","travelMode","polylineOptionsThis","directionsDisplay","DirectionsRenderer","push","route","result","status","setDirections","nextSeg","prevSeg","transitOptions","routingPreference","_c5","cards","i","length","thisRoutePlan","routeText","segmentText","times","durations","riding","key","walking","waiting","isSheltered","id","title","description","score","toFixed","totalTimeOutside","handleClick","card","_c6","$RefreshReg$"],"sources":["C:/Users/wasdp/Desktop/MyProgrammingLab/Commute Compass/Commute Compass - React Version/Commute-Compass-Vercel/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport {APIProvider, Map, useMap, useMapsLibrary} from '@vis.gl/react-google-maps';\nimport {PlaceAutocompleteClassic} from './autocomplete-classic';\nimport './App.css';\n\n\nconst serverPort = 3001;\nconst googleMapsApiKey = \"AIzaSyDjpkA1wkyhf5VjzfkeIOqP9IzZLn55C80\";\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\nconst center = {\n  lat: 49.8951,\n  lng: -97.1384\n};\n\n// Define a symbol using SVG path notation, with an opacity of 1.\nconst lineSymbol = {\n  path: \"M 0,-1 0,1\",\n  strokeOpacity: 1,\n  scale: 4,\n};\n\nconst polylineOptions = {\n  geodesic: true,\n  strokeColor: '#FF0000', \n  strokeOpacity: 0,\n  strokeWeight: 2,\n  icons: [\n    {\n      icon: lineSymbol,\n      offset: \"0\",\n      repeat: \"20px\",\n    },\n  ],\n};\n\n\nconst App = () => {\n  // const { isLoaded } = useJsApiLoader({\n  //   googleMapsApiKey: googleMapsApiKey,\n  //   libraries: libraries,\n  // });\n  const [origin, setOrigin] = useState('');\n  const [destination, setDestination] = useState(''); \n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [routePlans, setRoutePlans] = useState([]);\n  const [selectedPlanIndex, setSelectedPlanIndex] = useState(0);\n  const [scores, setScores] = useState([]);\n\n  // console.log(currentPosition);\n\n  return (\n    <div className=\"App\">\n      <APIProvider apiKey={googleMapsApiKey}>\n        <h1>Commute Compass</h1>\n        <div style={{ marginBottom: '10px' }}>\n          <strong>Origin:</strong><PlaceAutocompleteClassic onPlaceSelect={setOrigin} currPos={currentPosition} /> \n          <strong>Destination:</strong><PlaceAutocompleteClassic onPlaceSelect={setDestination} currPos={currentPosition} />\n          <GetRouteButton origin={origin} destination={destination} setPlans={setRoutePlans} setScores={setScores} setSelected={setSelectedPlanIndex} />\n        </div>\n        <div style={containerStyle}>\n        <Map\n          defaultZoom={12}\n          defaultCenter={center}\n          gestureHandling={'greedy'}\n          disableDefaultUI={false}\n        />\n        </div>\n        <GetCurrentCoord setPos={setCurrentPosition} />\n        <Directions currPos={currentPosition} />\n        <RouteCards routePlans={routePlans} routeScores={scores} setSelected={setSelectedPlanIndex} />\n        <DisplayRoute routePlans={routePlans} selectedPlanIndex={selectedPlanIndex} />\n      </APIProvider>\n    </div>\n  );\n};\n\nfunction GetCurrentCoord({setPos}) {\n  React.useEffect(() => {\n    const fetchCurrentPosition = async () => {\n      try {\n        const pos = await getCurrentCoord();\n        setPos(pos);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchCurrentPosition();\n  }, []);\n\n  const getCurrentCoord = () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const pos = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            };\n            resolve(pos);\n          },\n          () => {\n            console.error(\"Error: The Geolocation service failed.\");\n            reject(\"Error: The Geolocation service failed.\");\n          }\n        );\n      } else {\n        console.error(\"Error: Your browser doesn't support geolocation.\");\n        reject(\"Error: Your browser doesn't support geolocation.\");\n      }\n    });\n  };\n}\n\nfunction Directions( {currPos} ) {\n  // const places = useMapsLibrary('places');\n  // const routes = useMapsLibrary('routes');\n  // const mapsLib = useMapsLibrary('maps');\n  // const geocoding = useMapsLibrary('geocoding');\n  const markerLib = useMapsLibrary(\"marker\");\n  const [marker, setMarker] = useState();\n\n  const map = useMap();\n\n  React.useEffect(() => {\n    if (map) {\n      map.setCenter(currPos);\n      // Show user's location using the built-in dot\n      // setMarker(new markerLib.Marker({\n      //   position: currPos,\n      //   map: map,\n      //   title: 'Your Location',\n      // }));\n    }\n  }, [map, currPos]);\n\n}\n\nfunction GetRouteButton({ origin, destination, setPlans, setScores, setSelected }) {\n  // const geocoding = useMapsLibrary('geocoding');\n  // const routes = useMapsLibrary('routes');\n\n  const getCoordinates = (formatedAddress) => {\n    const latitude = formatedAddress.geometry.location.lat();\n    const longitude = formatedAddress.geometry.location.lng();\n    return([latitude, longitude]);\n  };\n\n  const callMyFunction = async () => {\n    try {\n      const coordOrigin = getCoordinates(origin);\n      const coordDest = getCoordinates(destination);\n      console.log(coordOrigin);\n      const response = await fetch(`https://commute-compass-backend.vercel.app/myFunction`, {\n        method: 'POST',\n        mode: 'no-cors',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          origin: coordOrigin,\n          destination: coordDest,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const [plans, routeScores] = data;\n      setPlans(plans);\n      setScores(routeScores);\n      setSelected(routeScores[0].planId-1);\n      // displayRoute(plans[0]);\n    } catch (error) {\n      console.error('There has been a problem with your fetch operation:', error);\n    }\n  };\n\n\n\n  return(<button onClick={callMyFunction}>Get Route</button>);\n}\n\nfunction DisplayRoute({routePlans, selectedPlanIndex}) {\n  const [directionsDisplays, setDirectionsDisplays] = useState([]);\n  const routes = useMapsLibrary('routes');\n  const map = useMap();\n\n  React.useEffect(() => {\n    if (map && routePlans) {\n      displayRoute(routePlans[selectedPlanIndex]);\n    }\n  }, [routePlans, selectedPlanIndex]);\n\n  const displayRoute = (routeInfo) => {\n\n    const directionsService = new routes.DirectionsService();\n  \n    // Clear existing directions renderers\n    directionsDisplays.forEach(display => display.setMap(null));\n    setDirectionsDisplays([]);\n  \n    const getGeographic = (location) => {\n      if (location.hasOwnProperty('stop')) {\n        return location.stop.centre.geographic;\n      } else if (location.hasOwnProperty('origin')) {\n        if (location.origin.hasOwnProperty('monument')) {\n          return location.origin.monument.address.centre.geographic;\n        } else if (location.origin.hasOwnProperty('point')) {\n          return location.origin.point.centre.geographic;\n        } else {\n          return location.origin.address.centre.geographic;\n        }\n      } else if (location.hasOwnProperty('destination')) {\n        if (location.destination.hasOwnProperty('monument')) {\n          return location.destination.monument.address.centre.geographic;\n        } else if (location.destination.hasOwnProperty('point')) {\n          return location.destination.point.centre.geographic;\n        } else {\n          return location.destination.address.centre.geographic;\n        }\n      }\n      return null;\n    };\n  \n    const newDirectionsDisplays = [];\n  \n    routeInfo.segments.forEach((segment, index) => {\n      console.log(segment);\n      if (segment.type === 'walk' || segment.type === 'transfer') {\n        const fromGeographic = getGeographic(segment.from);\n        const toGeographic = getGeographic(segment.to);\n        const request = {\n          origin: { lat: parseFloat(fromGeographic.latitude), lng: parseFloat(fromGeographic.longitude) },\n          destination: { lat: parseFloat(toGeographic.latitude), lng: parseFloat(toGeographic.longitude) },\n          travelMode: 'WALKING'\n        };\n  \n        const polylineOptionsThis = (segment.type === 'walk' || segment.type === 'transfer') ? polylineOptions : {};\n  \n        const directionsDisplay = new routes.DirectionsRenderer({\n          map: map,\n          polylineOptions: polylineOptionsThis\n        });\n        newDirectionsDisplays.push(directionsDisplay);\n  \n        directionsService.route(request, (result, status) => {\n          if (status === 'OK') {\n            directionsDisplay.setDirections(result);\n          }\n        });\n      } else if (segment.type === 'ride') {\n        const nextSeg = routeInfo.segments[index + 1];\n        const toGeographic = getGeographic(nextSeg.from);\n        const prevSeg = routeInfo.segments[index - 1];\n        const fromGeographic = getGeographic(prevSeg.to);\n  \n        const request = {\n          origin: { lat: parseFloat(fromGeographic.latitude), lng: parseFloat(fromGeographic.longitude) },\n          destination: { lat: parseFloat(toGeographic.latitude), lng: parseFloat(toGeographic.longitude) },\n          travelMode: 'TRANSIT',\n          transitOptions: {\n            routingPreference: 'LESS_WALKING'\n          }\n        };\n  \n        const directionsDisplay = new routes.DirectionsRenderer({ map: map });\n        newDirectionsDisplays.push(directionsDisplay);\n  \n        directionsService.route(request, (result, status) => {\n          if (status === 'OK') {\n            directionsDisplay.setDirections(result);\n          }\n        });\n      }\n    });\n  \n    setDirectionsDisplays(newDirectionsDisplays);\n  };\n}\n\n\n\nfunction RouteCards({ routePlans, routeScores, setSelected }) {\n  const cards = [];\n\n  for (let i = 0; i < routeScores.length; i++) {\n    const thisRoutePlan = routePlans[routeScores[i].planId - 1];\n    let routeText = thisRoutePlan.segments.map((segment, index) => {\n      let segmentText = '';\n      if (segment.type === 'ride') {\n        segmentText = (\n          <div key={index} className=\"segment\">\n            ● <strong>Ride:</strong> Riding: {segment.times.durations.riding} min, Bus: {segment.route.key}\n          </div>\n        );\n      } else if (segment.type === 'walk') {\n        segmentText = (\n          <div key={index} className=\"segment\">\n            ● <strong>Walk:</strong> Walking: {segment.times.durations.walking} min\n          </div>\n        );\n      } else if (segment.type === 'transfer') {\n        segmentText = (\n          <div key={index} className=\"segment\">\n            ● <strong>Transfer:</strong> Walking: {segment.times.durations.walking} min, Waiting: {segment.times.durations.waiting} min({segment.to.stop.isSheltered ? \"sheltered\" : \"unsheltered\"})\n          </div>\n        );\n      }\n      return segmentText;\n    });\n\n    cards.push({\n      id: i + 1,\n      title: 'Route ' + (i + 1),\n      description: (\n        <div>\n          <div><strong>Score:</strong> {routeScores[i].score.toFixed(2)} | <strong>Time Outside:</strong> {routeScores[i].totalTimeOutside} min</div>\n          <div className=\"segments\">{routeText}</div>\n        </div>\n      ),\n    });\n  }\n\n  const handleClick = (index) => {\n    setSelected(routeScores[index - 1].planId - 1);\n  };\n\n  return (\n    <div className=\"cards-container\">\n      {cards.map((card) => (\n        <div key={card.id} className=\"card\" onClick={() => handleClick(card.id)}>\n          <h2>{card.title}</h2>\n          <div>{card.description}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}