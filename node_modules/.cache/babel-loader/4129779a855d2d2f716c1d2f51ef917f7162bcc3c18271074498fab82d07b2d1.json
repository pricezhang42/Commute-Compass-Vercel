{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wasdp\\\\Desktop\\\\MyProgrammingLab\\\\workplace\\\\Commute-Compass-Vercel\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { APIProvider, Map, useMap, useMapsLibrary } from '@vis.gl/react-google-maps';\nimport { PlaceAutocompleteClassic } from './autocomplete-classic';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst serverPort = 3001;\nconst googleMapsApiKey = \"AIzaSyDsQUV_LMMHVvJNpRV4PC6wYd4NsooyWFU\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst center = {\n  lat: 49.8951,\n  lng: -97.1384\n};\n\n// Define a symbol using SVG path notation, with an opacity of 1.\nconst lineSymbol = {\n  path: \"M 0,-1 0,1\",\n  strokeOpacity: 1,\n  scale: 4\n};\nconst polylineOptions = {\n  geodesic: true,\n  strokeColor: '#FF0000',\n  strokeOpacity: 0,\n  strokeWeight: 2,\n  icons: [{\n    icon: lineSymbol,\n    offset: \"0\",\n    repeat: \"20px\"\n  }]\n};\nconst App = () => {\n  _s();\n  // const { isLoaded } = useJsApiLoader({\n  //   googleMapsApiKey: googleMapsApiKey,\n  //   libraries: libraries,\n  // });\n  const [origin, setOrigin] = useState('');\n  const [destination, setDestination] = useState('');\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [routePlans, setRoutePlans] = useState([]);\n  const [selectedPlanIndex, setSelectedPlanIndex] = useState(0);\n  const [scores, setScores] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(APIProvider, {\n      apiKey: googleMapsApiKey,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Commute Compass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/pricezhang42/Commute-Compass-Vercel\",\n        children: \"GitHub Repo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Origin:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlaceAutocompleteClassic, {\n          onPlaceSelect: setOrigin,\n          currPos: currentPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Destination:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlaceAutocompleteClassic, {\n          onPlaceSelect: setDestination,\n          currPos: currentPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(GetRouteButton, {\n          origin: origin,\n          destination: destination,\n          setPlans: setRoutePlans,\n          setScores: setScores,\n          setSelected: setSelectedPlanIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: containerStyle,\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          defaultZoom: 12,\n          defaultCenter: center,\n          gestureHandling: 'greedy',\n          disableDefaultUI: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GetCurrentCoord, {\n        setPos: setCurrentPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Directions, {\n        currPos: currentPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RouteCards, {\n        routePlans: routePlans,\n        routeScores: scores,\n        setSelected: setSelectedPlanIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayRoute, {\n        routePlans: routePlans,\n        selectedPlanIndex: selectedPlanIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qxhfgVwpgLcmU/vk2PUmSCI7SIs=\");\n_c = App;\nfunction GetCurrentCoord({\n  setPos\n}) {\n  _s2();\n  React.useEffect(() => {\n    const fetchCurrentPosition = async () => {\n      try {\n        const pos = await getCurrentCoord();\n        setPos(pos);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCurrentPosition();\n  }, []);\n  const getCurrentCoord = () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const pos = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          resolve(pos);\n        }, () => {\n          console.error(\"Error: The Geolocation service failed.\");\n          reject(\"Error: The Geolocation service failed.\");\n        });\n      } else {\n        console.error(\"Error: Your browser doesn't support geolocation.\");\n        reject(\"Error: Your browser doesn't support geolocation.\");\n      }\n    });\n  };\n}\n_s2(GetCurrentCoord, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = GetCurrentCoord;\nfunction Directions({\n  currPos\n}) {\n  _s3();\n  const markerLib = useMapsLibrary(\"marker\");\n  const [marker, setMarker] = useState();\n  const map = useMap();\n  React.useEffect(() => {\n    if (map && currPos) {\n      map.setCenter(currPos);\n    }\n  }, [map, currPos]);\n}\n_s3(Directions, \"7oxWS9MVKL1tUjfzh84ybzF739U=\", false, function () {\n  return [useMapsLibrary, useMap];\n});\n_c3 = Directions;\nfunction GetRouteButton({\n  origin,\n  destination,\n  setPlans,\n  setScores,\n  setSelected\n}) {\n  _s4();\n  const [warning, setWarning] = useState('');\n  const getCoordinates = formatedAddress => {\n    const latitude = formatedAddress.geometry.location.lat();\n    const longitude = formatedAddress.geometry.location.lng();\n    return [latitude, longitude];\n  };\n  useEffect(() => {\n    if (warning) {\n      const timer = setTimeout(() => {\n        setWarning('');\n      }, 4000); // Hide after 4 seconds\n      return () => clearTimeout(timer);\n    }\n  }, [warning]);\n  const callMyFunction = async () => {\n    try {\n      const coordOrigin = getCoordinates(origin);\n      const coordDest = getCoordinates(destination);\n      const response = await fetch(`https://commute-compass-backend.vercel.app/myFunction`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          origin: coordOrigin,\n          destination: coordDest\n        })\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      if (!Array.isArray(data) || data.length < 2 || !Array.isArray(data[0]) || data[0].length === 0) {\n        setWarning('⚠️ Please enter valid places within Winnipeg.');\n        return;\n      }\n      const [plans, routeScores] = data;\n      setPlans(plans);\n      setScores(routeScores);\n      setSelected(routeScores[0].planId - 1);\n    } catch (error) {\n      console.error('There has been a problem with your fetch operation:', error);\n      setWarning('⚠️ Failed to retrieve routes. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: callMyFunction,\n      children: \"Get Route\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), warning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"floating-warning\",\n      children: warning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n_s4(GetRouteButton, \"yzfeTs7ZQmdVYRCOFBy1DZWGIGo=\");\n_c4 = GetRouteButton;\nfunction DisplayRoute({\n  routePlans,\n  selectedPlanIndex\n}) {\n  _s5();\n  const [directionsDisplays, setDirectionsDisplays] = useState([]);\n  const routes = useMapsLibrary('routes');\n  const map = useMap();\n  React.useEffect(() => {\n    if (map && routePlans) {\n      displayRoute(routePlans[selectedPlanIndex]);\n    }\n  }, [routePlans, selectedPlanIndex]);\n  const displayRoute = routeInfo => {\n    const directionsService = new routes.DirectionsService();\n\n    // Clear existing directions renderers\n    directionsDisplays.forEach(display => display.setMap(null));\n    setDirectionsDisplays([]);\n    const getGeographic = location => {\n      if (location.hasOwnProperty('stop')) {\n        return location.stop.centre.geographic;\n      } else if (location.hasOwnProperty('origin')) {\n        if (location.origin.hasOwnProperty('monument')) {\n          return location.origin.monument.address.centre.geographic;\n        } else if (location.origin.hasOwnProperty('point')) {\n          return location.origin.point.centre.geographic;\n        } else {\n          return location.origin.address.centre.geographic;\n        }\n      } else if (location.hasOwnProperty('destination')) {\n        if (location.destination.hasOwnProperty('monument')) {\n          return location.destination.monument.address.centre.geographic;\n        } else if (location.destination.hasOwnProperty('point')) {\n          return location.destination.point.centre.geographic;\n        } else {\n          return location.destination.address.centre.geographic;\n        }\n      }\n      return null;\n    };\n    const newDirectionsDisplays = [];\n    let skipSeg = false;\n    routeInfo.segments.forEach((segment, index) => {\n      console.log(segment);\n      if (!skipSeg) {\n        if (segment.type === 'walk' || segment.type === 'transfer') {\n          const fromGeographic = getGeographic(segment.from);\n          const toGeographic = getGeographic(segment.to);\n          const request = {\n            origin: {\n              lat: parseFloat(fromGeographic.latitude),\n              lng: parseFloat(fromGeographic.longitude)\n            },\n            destination: {\n              lat: parseFloat(toGeographic.latitude),\n              lng: parseFloat(toGeographic.longitude)\n            },\n            travelMode: 'WALKING'\n          };\n          const polylineOptionsThis = segment.type === 'walk' || segment.type === 'transfer' ? polylineOptions : {};\n          const directionsDisplay = new routes.DirectionsRenderer({\n            map: map,\n            polylineOptions: polylineOptionsThis\n          });\n          newDirectionsDisplays.push(directionsDisplay);\n          directionsService.route(request, (result, status) => {\n            if (status === 'OK') {\n              directionsDisplay.setDirections(result);\n            }\n          });\n        } else if (segment.type === 'ride') {\n          let nextSeg = routeInfo.segments[index + 1];\n          if (nextSeg.type === 'ride') {\n            nextSeg = routeInfo.segments[index + 2];\n            skipSeg = true;\n          }\n          const toGeographic = getGeographic(nextSeg.from);\n          const prevSeg = routeInfo.segments[index - 1];\n          const fromGeographic = getGeographic(prevSeg.to);\n          const request = {\n            origin: {\n              lat: parseFloat(fromGeographic.latitude),\n              lng: parseFloat(fromGeographic.longitude)\n            },\n            destination: {\n              lat: parseFloat(toGeographic.latitude),\n              lng: parseFloat(toGeographic.longitude)\n            },\n            travelMode: 'TRANSIT',\n            transitOptions: {\n              routingPreference: 'LESS_WALKING'\n            }\n          };\n          const directionsDisplay = new routes.DirectionsRenderer({\n            map: map\n          });\n          newDirectionsDisplays.push(directionsDisplay);\n          directionsService.route(request, (result, status) => {\n            if (status === 'OK') {\n              directionsDisplay.setDirections(result);\n            }\n          });\n        }\n      } else {\n        skipSeg = false;\n      }\n    });\n    setDirectionsDisplays(newDirectionsDisplays);\n  };\n}\n_s5(DisplayRoute, \"kznHU9A4oiJQnkI7a2D9U266/NQ=\", false, function () {\n  return [useMapsLibrary, useMap];\n});\n_c5 = DisplayRoute;\nconst getShelterClass = shelterType => {\n  switch (shelterType) {\n    case 'Heated Shelter':\n      return 'shelter-heated';\n    case 'Unheated Shelter':\n      return 'shelter-unheated';\n    case 'Unsheltered':\n      return 'shelter-unsheltered';\n    default:\n      return '';\n  }\n};\nfunction RouteCards({\n  routePlans,\n  routeScores,\n  setSelected\n}) {\n  const cards = [];\n  for (let i = 0; i < routeScores.length; i++) {\n    const thisRoutePlan = routePlans[routeScores[i].planId - 1];\n    let routeText = thisRoutePlan.segments.map((segment, index) => {\n      var _segment$times, _segment$times$start;\n      let segmentText = '';\n      const startTime = (_segment$times = segment.times) === null || _segment$times === void 0 ? void 0 : (_segment$times$start = _segment$times.start) === null || _segment$times$start === void 0 ? void 0 : _segment$times$start.substring(11, 16);\n      if (segment.type === 'ride') {\n        segmentText = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segment\",\n          children: [\"\\u25CF \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ride:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), \" (\", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: startTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 39\n          }, this), \") \", segment.times.durations.riding, \" min, Bus: \", segment.route.key]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this);\n      } else if (segment.type === 'walk') {\n        var _segment$to, _segment$to$stop;\n        segmentText = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segment\",\n          children: [\"\\u25CF \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Walk:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), \" (\", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: startTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 39\n          }, this), \") \", segment.times.durations.walking, \" min\", ((_segment$to = segment.to) === null || _segment$to === void 0 ? void 0 : (_segment$to$stop = _segment$to.stop) === null || _segment$to$stop === void 0 ? void 0 : _segment$to$stop.shelter) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: getShelterClass(segment.to.stop.shelter),\n            children: [' ', \"(\", segment.to.stop.shelter, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this);\n      } else if (segment.type === 'transfer') {\n        var _segment$to2, _segment$to2$stop;\n        segmentText = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segment\",\n          children: [\"\\u25CF \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Transfer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), \" (\", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: startTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 43\n          }, this), \") Walking: \", segment.times.durations.walking, \" min, Waiting: \", segment.times.durations.waiting, \" min\", ((_segment$to2 = segment.to) === null || _segment$to2 === void 0 ? void 0 : (_segment$to2$stop = _segment$to2.stop) === null || _segment$to2$stop === void 0 ? void 0 : _segment$to2$stop.shelter) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: getShelterClass(segment.to.stop.shelter),\n            children: [' ', \"(\", segment.to.stop.shelter, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this);\n      }\n      return segmentText;\n    });\n    cards.push({\n      id: i + 1,\n      title: 'Route ' + (i + 1),\n      description: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 16\n          }, this), \" \", routeScores[i].score.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Time Outside:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 16\n          }, this), \" \", routeScores[i].totalTimeOutside, \" min (\", routeScores[i].totalTimeSheltered, \" min sheltered)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segments\",\n          children: routeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)\n    });\n  }\n  const handleClick = index => {\n    setSelected(routeScores[index - 1].planId - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards-container\",\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      onClick: () => handleClick(card.id),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: card.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: card.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n}\n_c6 = RouteCards;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"GetCurrentCoord\");\n$RefreshReg$(_c3, \"Directions\");\n$RefreshReg$(_c4, \"GetRouteButton\");\n$RefreshReg$(_c5, \"DisplayRoute\");\n$RefreshReg$(_c6, \"RouteCards\");","map":{"version":3,"names":["React","useState","useEffect","APIProvider","Map","useMap","useMapsLibrary","PlaceAutocompleteClassic","jsxDEV","_jsxDEV","serverPort","googleMapsApiKey","containerStyle","width","height","center","lat","lng","lineSymbol","path","strokeOpacity","scale","polylineOptions","geodesic","strokeColor","strokeWeight","icons","icon","offset","repeat","App","_s","origin","setOrigin","destination","setDestination","currentPosition","setCurrentPosition","routePlans","setRoutePlans","selectedPlanIndex","setSelectedPlanIndex","scores","setScores","className","children","apiKey","fileName","_jsxFileName","lineNumber","columnNumber","href","style","marginBottom","onPlaceSelect","currPos","GetRouteButton","setPlans","setSelected","defaultZoom","defaultCenter","gestureHandling","disableDefaultUI","GetCurrentCoord","setPos","Directions","RouteCards","routeScores","DisplayRoute","_c","_s2","fetchCurrentPosition","pos","getCurrentCoord","error","console","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","_c2","_s3","markerLib","marker","setMarker","map","setCenter","_c3","_s4","warning","setWarning","getCoordinates","formatedAddress","geometry","location","timer","setTimeout","clearTimeout","callMyFunction","coordOrigin","coordDest","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","Array","isArray","length","plans","planId","onClick","_c4","_s5","directionsDisplays","setDirectionsDisplays","routes","displayRoute","routeInfo","directionsService","DirectionsService","forEach","display","setMap","getGeographic","hasOwnProperty","stop","centre","geographic","monument","address","point","newDirectionsDisplays","skipSeg","segments","segment","index","log","type","fromGeographic","from","toGeographic","to","request","parseFloat","travelMode","polylineOptionsThis","directionsDisplay","DirectionsRenderer","push","route","result","status","setDirections","nextSeg","prevSeg","transitOptions","routingPreference","_c5","getShelterClass","shelterType","cards","i","thisRoutePlan","routeText","_segment$times","_segment$times$start","segmentText","startTime","times","start","substring","durations","riding","key","_segment$to","_segment$to$stop","walking","shelter","_segment$to2","_segment$to2$stop","waiting","id","title","description","score","toFixed","totalTimeOutside","totalTimeSheltered","handleClick","card","_c6","$RefreshReg$"],"sources":["C:/Users/wasdp/Desktop/MyProgrammingLab/workplace/Commute-Compass-Vercel/src/App.js"],"sourcesContent":["import React, { useState, useEffect  } from 'react';\r\nimport {APIProvider, Map, useMap, useMapsLibrary} from '@vis.gl/react-google-maps';\r\nimport {PlaceAutocompleteClassic} from './autocomplete-classic';\r\nimport './App.css';\r\n\r\n\r\nconst serverPort = 3001;\r\nconst googleMapsApiKey = \"AIzaSyDsQUV_LMMHVvJNpRV4PC6wYd4NsooyWFU\";\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '400px'\r\n};\r\n\r\nconst center = {\r\n  lat: 49.8951,\r\n  lng: -97.1384\r\n};\r\n\r\n// Define a symbol using SVG path notation, with an opacity of 1.\r\nconst lineSymbol = {\r\n  path: \"M 0,-1 0,1\",\r\n  strokeOpacity: 1,\r\n  scale: 4,\r\n};\r\n\r\nconst polylineOptions = {\r\n  geodesic: true,\r\n  strokeColor: '#FF0000', \r\n  strokeOpacity: 0,\r\n  strokeWeight: 2,\r\n  icons: [\r\n    {\r\n      icon: lineSymbol,\r\n      offset: \"0\",\r\n      repeat: \"20px\",\r\n    },\r\n  ],\r\n};\r\n\r\n\r\nconst App = () => {\r\n  // const { isLoaded } = useJsApiLoader({\r\n  //   googleMapsApiKey: googleMapsApiKey,\r\n  //   libraries: libraries,\r\n  // });\r\n  const [origin, setOrigin] = useState('');\r\n  const [destination, setDestination] = useState(''); \r\n  const [currentPosition, setCurrentPosition] = useState(null);\r\n  const [routePlans, setRoutePlans] = useState([]);\r\n  const [selectedPlanIndex, setSelectedPlanIndex] = useState(0);\r\n  const [scores, setScores] = useState([]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <APIProvider apiKey={googleMapsApiKey}>\r\n        <h1>Commute Compass</h1>\r\n        <a href=\"https://github.com/pricezhang42/Commute-Compass-Vercel\">GitHub Repo</a>\r\n        <div style={{ marginBottom: '10px' }}>\r\n          <strong>Origin:</strong><PlaceAutocompleteClassic onPlaceSelect={setOrigin} currPos={currentPosition} /> \r\n          <strong>Destination:</strong><PlaceAutocompleteClassic onPlaceSelect={setDestination} currPos={currentPosition} />\r\n          <GetRouteButton origin={origin} destination={destination} setPlans={setRoutePlans} setScores={setScores} setSelected={setSelectedPlanIndex} />\r\n        </div>\r\n        <div style={containerStyle}>\r\n        <Map\r\n          defaultZoom={12}\r\n          defaultCenter={center}\r\n          gestureHandling={'greedy'}\r\n          disableDefaultUI={false}\r\n        />\r\n        </div>\r\n        <GetCurrentCoord setPos={setCurrentPosition} />\r\n        <Directions currPos={currentPosition} />\r\n        <RouteCards routePlans={routePlans} routeScores={scores} setSelected={setSelectedPlanIndex} />\r\n        <DisplayRoute routePlans={routePlans} selectedPlanIndex={selectedPlanIndex} />\r\n      </APIProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction GetCurrentCoord({setPos}) {\r\n  React.useEffect(() => {\r\n    const fetchCurrentPosition = async () => {\r\n      try {\r\n        const pos = await getCurrentCoord();\r\n        setPos(pos);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchCurrentPosition();\r\n  }, []);\r\n\r\n  const getCurrentCoord = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const pos = {\r\n              lat: position.coords.latitude,\r\n              lng: position.coords.longitude,\r\n            };\r\n            resolve(pos);\r\n          },\r\n          () => {\r\n            console.error(\"Error: The Geolocation service failed.\");\r\n            reject(\"Error: The Geolocation service failed.\");\r\n          }\r\n        );\r\n      } else {\r\n        console.error(\"Error: Your browser doesn't support geolocation.\");\r\n        reject(\"Error: Your browser doesn't support geolocation.\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction Directions( {currPos} ) {\r\n  const markerLib = useMapsLibrary(\"marker\");\r\n  const [marker, setMarker] = useState();\r\n\r\n  const map = useMap();\r\n\r\n  React.useEffect(() => {\r\n    if (map && currPos) {\r\n      map.setCenter(currPos);\r\n    }\r\n  }, [map, currPos]);\r\n\r\n}\r\n\r\nfunction GetRouteButton({ origin, destination, setPlans, setScores, setSelected }) {\r\n  const [warning, setWarning] = useState('');\r\n\r\n  const getCoordinates = (formatedAddress) => {\r\n    const latitude = formatedAddress.geometry.location.lat();\r\n    const longitude = formatedAddress.geometry.location.lng();\r\n    return [latitude, longitude];\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (warning) {\r\n      const timer = setTimeout(() => {\r\n        setWarning('');\r\n      }, 4000); // Hide after 4 seconds\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [warning]);\r\n\r\n  const callMyFunction = async () => {\r\n    try {\r\n      const coordOrigin = getCoordinates(origin);\r\n      const coordDest = getCoordinates(destination);\r\n\r\n      const response = await fetch(`https://commute-compass-backend.vercel.app/myFunction`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ origin: coordOrigin, destination: coordDest }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Network response was not ok');\r\n\r\n      const data = await response.json();\r\n\r\n      if (!Array.isArray(data) || data.length < 2 || !Array.isArray(data[0]) || data[0].length === 0) {\r\n        setWarning('⚠️ Please enter valid places within Winnipeg.');\r\n        return;\r\n      }\r\n\r\n      const [plans, routeScores] = data;\r\n      setPlans(plans);\r\n      setScores(routeScores);\r\n      setSelected(routeScores[0].planId - 1);\r\n    } catch (error) {\r\n      console.error('There has been a problem with your fetch operation:', error);\r\n      setWarning('⚠️ Failed to retrieve routes. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={callMyFunction}>Get Route</button>\r\n      {warning && <div className=\"floating-warning\">{warning}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DisplayRoute({routePlans, selectedPlanIndex}) {\r\n  const [directionsDisplays, setDirectionsDisplays] = useState([]);\r\n  const routes = useMapsLibrary('routes');\r\n  const map = useMap();\r\n\r\n  React.useEffect(() => {\r\n    if (map && routePlans) {\r\n      displayRoute(routePlans[selectedPlanIndex]);\r\n    }\r\n  }, [routePlans, selectedPlanIndex]);\r\n\r\n  const displayRoute = (routeInfo) => {\r\n\r\n    const directionsService = new routes.DirectionsService();\r\n  \r\n    // Clear existing directions renderers\r\n    directionsDisplays.forEach(display => display.setMap(null));\r\n    setDirectionsDisplays([]);\r\n  \r\n    const getGeographic = (location) => {\r\n      if (location.hasOwnProperty('stop')) {\r\n        return location.stop.centre.geographic;\r\n      } else if (location.hasOwnProperty('origin')) {\r\n        if (location.origin.hasOwnProperty('monument')) {\r\n          return location.origin.monument.address.centre.geographic;\r\n        } else if (location.origin.hasOwnProperty('point')) {\r\n          return location.origin.point.centre.geographic;\r\n        } else {\r\n          return location.origin.address.centre.geographic;\r\n        }\r\n      } else if (location.hasOwnProperty('destination')) {\r\n        if (location.destination.hasOwnProperty('monument')) {\r\n          return location.destination.monument.address.centre.geographic;\r\n        } else if (location.destination.hasOwnProperty('point')) {\r\n          return location.destination.point.centre.geographic;\r\n        } else {\r\n          return location.destination.address.centre.geographic;\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  \r\n    const newDirectionsDisplays = [];\r\n    let skipSeg = false;\r\n  \r\n    routeInfo.segments.forEach((segment, index) => {\r\n      console.log(segment);\r\n      if (!skipSeg) {\r\n        if (segment.type === 'walk' || segment.type === 'transfer') {\r\n          const fromGeographic = getGeographic(segment.from);\r\n          const toGeographic = getGeographic(segment.to);\r\n          const request = {\r\n            origin: { lat: parseFloat(fromGeographic.latitude), lng: parseFloat(fromGeographic.longitude) },\r\n            destination: { lat: parseFloat(toGeographic.latitude), lng: parseFloat(toGeographic.longitude) },\r\n            travelMode: 'WALKING'\r\n          };\r\n    \r\n          const polylineOptionsThis = (segment.type === 'walk' || segment.type === 'transfer') ? polylineOptions : {};\r\n    \r\n          const directionsDisplay = new routes.DirectionsRenderer({\r\n            map: map,\r\n            polylineOptions: polylineOptionsThis\r\n          });\r\n          newDirectionsDisplays.push(directionsDisplay);\r\n    \r\n          directionsService.route(request, (result, status) => {\r\n            if (status === 'OK') {\r\n              directionsDisplay.setDirections(result);\r\n            }\r\n          });\r\n        } else if (segment.type === 'ride') {\r\n          let nextSeg = routeInfo.segments[index + 1];\r\n          if (nextSeg.type === 'ride') {\r\n            nextSeg = routeInfo.segments[index + 2];\r\n            skipSeg = true;\r\n          }\r\n          const toGeographic = getGeographic(nextSeg.from);\r\n          const prevSeg = routeInfo.segments[index - 1];\r\n          const fromGeographic = getGeographic(prevSeg.to);\r\n    \r\n          const request = {\r\n            origin: { lat: parseFloat(fromGeographic.latitude), lng: parseFloat(fromGeographic.longitude) },\r\n            destination: { lat: parseFloat(toGeographic.latitude), lng: parseFloat(toGeographic.longitude) },\r\n            travelMode: 'TRANSIT',\r\n            transitOptions: {\r\n              routingPreference: 'LESS_WALKING'\r\n            }\r\n          };\r\n    \r\n          const directionsDisplay = new routes.DirectionsRenderer({ map: map });\r\n          newDirectionsDisplays.push(directionsDisplay);\r\n    \r\n          directionsService.route(request, (result, status) => {\r\n            if (status === 'OK') {\r\n              directionsDisplay.setDirections(result);\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        skipSeg = false;\r\n      }\r\n\r\n    });\r\n  \r\n    setDirectionsDisplays(newDirectionsDisplays);\r\n  };\r\n}\r\n\r\nconst getShelterClass = (shelterType) => {\r\n  switch (shelterType) {\r\n    case 'Heated Shelter':\r\n      return 'shelter-heated';\r\n    case 'Unheated Shelter':\r\n      return 'shelter-unheated';\r\n    case 'Unsheltered':\r\n      return 'shelter-unsheltered';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nfunction RouteCards({ routePlans, routeScores, setSelected }) {\r\n  const cards = [];\r\n\r\n  for (let i = 0; i < routeScores.length; i++) {\r\n    const thisRoutePlan = routePlans[routeScores[i].planId - 1];\r\n    let routeText = thisRoutePlan.segments.map((segment, index) => {\r\n      let segmentText = '';\r\n      const startTime = segment.times?.start?.substring(11, 16)\r\n      if (segment.type === 'ride') {\r\n        segmentText = (\r\n          <div key={index} className=\"segment\">\r\n            ● <strong>Ride:</strong> (<i>{startTime}</i>) {segment.times.durations.riding} min, Bus: {segment.route.key}\r\n          </div>\r\n        );\r\n      } else if (segment.type === 'walk') {\r\n        segmentText = (\r\n          <div key={index} className=\"segment\">\r\n            ● <strong>Walk:</strong> (<i>{startTime}</i>) {segment.times.durations.walking} min\r\n            {segment.to?.stop?.shelter && (\r\n              <span className={getShelterClass(segment.to.stop.shelter)}>\r\n                {' '}\r\n                ({segment.to.stop.shelter})\r\n              </span>\r\n            )}\r\n          </div>\r\n        );\r\n      } else if (segment.type === 'transfer') {\r\n        segmentText = (\r\n          <div key={index} className=\"segment\">\r\n            ● <strong>Transfer:</strong> (<i>{startTime}</i>) Walking: {segment.times.durations.walking} min, Waiting: {segment.times.durations.waiting} min\r\n            {segment.to?.stop?.shelter && (\r\n              <span className={getShelterClass(segment.to.stop.shelter)}>\r\n                {' '}\r\n                ({segment.to.stop.shelter})\r\n              </span>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n      return segmentText;\r\n    });\r\n\r\n    cards.push({\r\n      id: i + 1,\r\n      title: 'Route ' + (i + 1),\r\n      description: (\r\n        <div>\r\n          <div><strong>Score:</strong> {routeScores[i].score.toFixed(2)}</div>\r\n          <div><strong>Time Outside:</strong> {routeScores[i].totalTimeOutside} min ({routeScores[i].totalTimeSheltered} min sheltered)</div>\r\n          <div className=\"segments\">{routeText}</div>\r\n        </div>\r\n      ),\r\n    });\r\n  }\r\n\r\n  const handleClick = (index) => {\r\n    setSelected(routeScores[index - 1].planId - 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cards-container\">\r\n      {cards.map((card) => (\r\n        <div key={card.id} className=\"card\" onClick={() => handleClick(card.id)}>\r\n          <h2>{card.title}</h2>\r\n          <div>{card.description}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAS,OAAO;AACnD,SAAQC,WAAW,EAAEC,GAAG,EAAEC,MAAM,EAAEC,cAAc,QAAO,2BAA2B;AAClF,SAAQC,wBAAwB,QAAO,wBAAwB;AAC/D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,MAAMC,UAAU,GAAG,IAAI;AACvB,MAAMC,gBAAgB,GAAG,yCAAyC;AAElE,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE,CAAC;AACR,CAAC;;AAED;AACA,MAAMC,UAAU,GAAG;EACjBC,IAAI,EAAE,YAAY;EAClBC,aAAa,EAAE,CAAC;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,eAAe,GAAG;EACtBC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE,SAAS;EACtBJ,aAAa,EAAE,CAAC;EAChBK,YAAY,EAAE,CAAC;EACfC,KAAK,EAAE,CACL;IACEC,IAAI,EAAET,UAAU;IAChBU,MAAM,EAAE,GAAG;IACXC,MAAM,EAAE;EACV,CAAC;AAEL,CAAC;AAGD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA;EACA;EACA;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACqC,UAAU,EAAEC,aAAa,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxC,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACyC,MAAM,EAAEC,SAAS,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAExC,oBACEQ,OAAA;IAAKmC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBpC,OAAA,CAACN,WAAW;MAAC2C,MAAM,EAAEnC,gBAAiB;MAAAkC,QAAA,gBACpCpC,OAAA;QAAAoC,QAAA,EAAI;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBzC,OAAA;QAAG0C,IAAI,EAAC,wDAAwD;QAAAN,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAChFzC,OAAA;QAAK2C,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAR,QAAA,gBACnCpC,OAAA;UAAAoC,QAAA,EAAQ;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAAAzC,OAAA,CAACF,wBAAwB;UAAC+C,aAAa,EAAErB,SAAU;UAACsB,OAAO,EAAEnB;QAAgB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxGzC,OAAA;UAAAoC,QAAA,EAAQ;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAAAzC,OAAA,CAACF,wBAAwB;UAAC+C,aAAa,EAAEnB,cAAe;UAACoB,OAAO,EAAEnB;QAAgB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClHzC,OAAA,CAAC+C,cAAc;UAACxB,MAAM,EAAEA,MAAO;UAACE,WAAW,EAAEA,WAAY;UAACuB,QAAQ,EAAElB,aAAc;UAACI,SAAS,EAAEA,SAAU;UAACe,WAAW,EAAEjB;QAAqB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3I,CAAC,eACNzC,OAAA;QAAK2C,KAAK,EAAExC,cAAe;QAAAiC,QAAA,eAC3BpC,OAAA,CAACL,GAAG;UACFuD,WAAW,EAAE,EAAG;UAChBC,aAAa,EAAE7C,MAAO;UACtB8C,eAAe,EAAE,QAAS;UAC1BC,gBAAgB,EAAE;QAAM;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACNzC,OAAA,CAACsD,eAAe;QAACC,MAAM,EAAE3B;MAAmB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CzC,OAAA,CAACwD,UAAU;QAACV,OAAO,EAAEnB;MAAgB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxCzC,OAAA,CAACyD,UAAU;QAAC5B,UAAU,EAAEA,UAAW;QAAC6B,WAAW,EAAEzB,MAAO;QAACgB,WAAW,EAAEjB;MAAqB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9FzC,OAAA,CAAC2D,YAAY;QAAC9B,UAAU,EAAEA,UAAW;QAACE,iBAAiB,EAAEA;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAACnB,EAAA,CArCID,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AAuCT,SAASiC,eAAeA,CAAC;EAACC;AAAM,CAAC,EAAE;EAAAM,GAAA;EACjCtE,KAAK,CAACE,SAAS,CAAC,MAAM;IACpB,MAAMqE,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,eAAe,CAAC,CAAC;QACnCT,MAAM,CAACQ,GAAG,CAAC;MACb,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDH,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAO,IAAIG,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAIC,SAAS,CAACC,WAAW,EAAE;QACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;UACZ,MAAMV,GAAG,GAAG;YACVxD,GAAG,EAAEkE,QAAQ,CAACC,MAAM,CAACC,QAAQ;YAC7BnE,GAAG,EAAEiE,QAAQ,CAACC,MAAM,CAACE;UACvB,CAAC;UACDR,OAAO,CAACL,GAAG,CAAC;QACd,CAAC,EACD,MAAM;UACJG,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAC;UACvDI,MAAM,CAAC,wCAAwC,CAAC;QAClD,CACF,CAAC;MACH,CAAC,MAAM;QACLH,OAAO,CAACD,KAAK,CAAC,kDAAkD,CAAC;QACjEI,MAAM,CAAC,kDAAkD,CAAC;MAC5D;IACF,CAAC,CAAC;EACJ,CAAC;AACH;AAACR,GAAA,CApCQP,eAAe;AAAAuB,GAAA,GAAfvB,eAAe;AAsCxB,SAASE,UAAUA,CAAE;EAACV;AAAO,CAAC,EAAG;EAAAgC,GAAA;EAC/B,MAAMC,SAAS,GAAGlF,cAAc,CAAC,QAAQ,CAAC;EAC1C,MAAM,CAACmF,MAAM,EAAEC,SAAS,CAAC,GAAGzF,QAAQ,CAAC,CAAC;EAEtC,MAAM0F,GAAG,GAAGtF,MAAM,CAAC,CAAC;EAEpBL,KAAK,CAACE,SAAS,CAAC,MAAM;IACpB,IAAIyF,GAAG,IAAIpC,OAAO,EAAE;MAClBoC,GAAG,CAACC,SAAS,CAACrC,OAAO,CAAC;IACxB;EACF,CAAC,EAAE,CAACoC,GAAG,EAAEpC,OAAO,CAAC,CAAC;AAEpB;AAACgC,GAAA,CAZQtB,UAAU;EAAA,QACC3D,cAAc,EAGpBD,MAAM;AAAA;AAAAwF,GAAA,GAJX5B,UAAU;AAcnB,SAAST,cAAcA,CAAC;EAAExB,MAAM;EAAEE,WAAW;EAAEuB,QAAQ;EAAEd,SAAS;EAAEe;AAAY,CAAC,EAAE;EAAAoC,GAAA;EACjF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG/F,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMgG,cAAc,GAAIC,eAAe,IAAK;IAC1C,MAAMd,QAAQ,GAAGc,eAAe,CAACC,QAAQ,CAACC,QAAQ,CAACpF,GAAG,CAAC,CAAC;IACxD,MAAMqE,SAAS,GAAGa,eAAe,CAACC,QAAQ,CAACC,QAAQ,CAACnF,GAAG,CAAC,CAAC;IACzD,OAAO,CAACmE,QAAQ,EAAEC,SAAS,CAAC;EAC9B,CAAC;EAEDnF,SAAS,CAAC,MAAM;IACd,IAAI6F,OAAO,EAAE;MACX,MAAMM,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BN,UAAU,CAAC,EAAE,CAAC;MAChB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACV,OAAO,MAAMO,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,WAAW,GAAGR,cAAc,CAACjE,MAAM,CAAC;MAC1C,MAAM0E,SAAS,GAAGT,cAAc,CAAC/D,WAAW,CAAC;MAE7C,MAAMyE,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,EAAE;QACpFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEjF,MAAM,EAAEyE,WAAW;UAAEvE,WAAW,EAAEwE;QAAU,CAAC;MACtE,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAEhE,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,IAAIA,IAAI,CAACI,MAAM,GAAG,CAAC,IAAI,CAACF,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,CAACI,MAAM,KAAK,CAAC,EAAE;QAC9FxB,UAAU,CAAC,+CAA+C,CAAC;QAC3D;MACF;MAEA,MAAM,CAACyB,KAAK,EAAEtD,WAAW,CAAC,GAAGiD,IAAI;MACjC3D,QAAQ,CAACgE,KAAK,CAAC;MACf9E,SAAS,CAACwB,WAAW,CAAC;MACtBT,WAAW,CAACS,WAAW,CAAC,CAAC,CAAC,CAACuD,MAAM,GAAG,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOhD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;MAC3EsB,UAAU,CAAC,uDAAuD,CAAC;IACrE;EACF,CAAC;EAED,oBACEvF,OAAA;IAAAoC,QAAA,gBACEpC,OAAA;MAAQkH,OAAO,EAAEnB,cAAe;MAAA3D,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClD6C,OAAO,iBAAItF,OAAA;MAAKmC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAEkD;IAAO;MAAAhD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV;AAAC4C,GAAA,CAtDQtC,cAAc;AAAAoE,GAAA,GAAdpE,cAAc;AAwDvB,SAASY,YAAYA,CAAC;EAAC9B,UAAU;EAAEE;AAAiB,CAAC,EAAE;EAAAqF,GAAA;EACrD,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG9H,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM+H,MAAM,GAAG1H,cAAc,CAAC,QAAQ,CAAC;EACvC,MAAMqF,GAAG,GAAGtF,MAAM,CAAC,CAAC;EAEpBL,KAAK,CAACE,SAAS,CAAC,MAAM;IACpB,IAAIyF,GAAG,IAAIrD,UAAU,EAAE;MACrB2F,YAAY,CAAC3F,UAAU,CAACE,iBAAiB,CAAC,CAAC;IAC7C;EACF,CAAC,EAAE,CAACF,UAAU,EAAEE,iBAAiB,CAAC,CAAC;EAEnC,MAAMyF,YAAY,GAAIC,SAAS,IAAK;IAElC,MAAMC,iBAAiB,GAAG,IAAIH,MAAM,CAACI,iBAAiB,CAAC,CAAC;;IAExD;IACAN,kBAAkB,CAACO,OAAO,CAACC,OAAO,IAAIA,OAAO,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC3DR,qBAAqB,CAAC,EAAE,CAAC;IAEzB,MAAMS,aAAa,GAAIpC,QAAQ,IAAK;MAClC,IAAIA,QAAQ,CAACqC,cAAc,CAAC,MAAM,CAAC,EAAE;QACnC,OAAOrC,QAAQ,CAACsC,IAAI,CAACC,MAAM,CAACC,UAAU;MACxC,CAAC,MAAM,IAAIxC,QAAQ,CAACqC,cAAc,CAAC,QAAQ,CAAC,EAAE;QAC5C,IAAIrC,QAAQ,CAACpE,MAAM,CAACyG,cAAc,CAAC,UAAU,CAAC,EAAE;UAC9C,OAAOrC,QAAQ,CAACpE,MAAM,CAAC6G,QAAQ,CAACC,OAAO,CAACH,MAAM,CAACC,UAAU;QAC3D,CAAC,MAAM,IAAIxC,QAAQ,CAACpE,MAAM,CAACyG,cAAc,CAAC,OAAO,CAAC,EAAE;UAClD,OAAOrC,QAAQ,CAACpE,MAAM,CAAC+G,KAAK,CAACJ,MAAM,CAACC,UAAU;QAChD,CAAC,MAAM;UACL,OAAOxC,QAAQ,CAACpE,MAAM,CAAC8G,OAAO,CAACH,MAAM,CAACC,UAAU;QAClD;MACF,CAAC,MAAM,IAAIxC,QAAQ,CAACqC,cAAc,CAAC,aAAa,CAAC,EAAE;QACjD,IAAIrC,QAAQ,CAAClE,WAAW,CAACuG,cAAc,CAAC,UAAU,CAAC,EAAE;UACnD,OAAOrC,QAAQ,CAAClE,WAAW,CAAC2G,QAAQ,CAACC,OAAO,CAACH,MAAM,CAACC,UAAU;QAChE,CAAC,MAAM,IAAIxC,QAAQ,CAAClE,WAAW,CAACuG,cAAc,CAAC,OAAO,CAAC,EAAE;UACvD,OAAOrC,QAAQ,CAAClE,WAAW,CAAC6G,KAAK,CAACJ,MAAM,CAACC,UAAU;QACrD,CAAC,MAAM;UACL,OAAOxC,QAAQ,CAAClE,WAAW,CAAC4G,OAAO,CAACH,MAAM,CAACC,UAAU;QACvD;MACF;MACA,OAAO,IAAI;IACb,CAAC;IAED,MAAMI,qBAAqB,GAAG,EAAE;IAChC,IAAIC,OAAO,GAAG,KAAK;IAEnBf,SAAS,CAACgB,QAAQ,CAACb,OAAO,CAAC,CAACc,OAAO,EAAEC,KAAK,KAAK;MAC7CzE,OAAO,CAAC0E,GAAG,CAACF,OAAO,CAAC;MACpB,IAAI,CAACF,OAAO,EAAE;QACZ,IAAIE,OAAO,CAACG,IAAI,KAAK,MAAM,IAAIH,OAAO,CAACG,IAAI,KAAK,UAAU,EAAE;UAC1D,MAAMC,cAAc,GAAGf,aAAa,CAACW,OAAO,CAACK,IAAI,CAAC;UAClD,MAAMC,YAAY,GAAGjB,aAAa,CAACW,OAAO,CAACO,EAAE,CAAC;UAC9C,MAAMC,OAAO,GAAG;YACd3H,MAAM,EAAE;cAAEhB,GAAG,EAAE4I,UAAU,CAACL,cAAc,CAACnE,QAAQ,CAAC;cAAEnE,GAAG,EAAE2I,UAAU,CAACL,cAAc,CAAClE,SAAS;YAAE,CAAC;YAC/FnD,WAAW,EAAE;cAAElB,GAAG,EAAE4I,UAAU,CAACH,YAAY,CAACrE,QAAQ,CAAC;cAAEnE,GAAG,EAAE2I,UAAU,CAACH,YAAY,CAACpE,SAAS;YAAE,CAAC;YAChGwE,UAAU,EAAE;UACd,CAAC;UAED,MAAMC,mBAAmB,GAAIX,OAAO,CAACG,IAAI,KAAK,MAAM,IAAIH,OAAO,CAACG,IAAI,KAAK,UAAU,GAAIhI,eAAe,GAAG,CAAC,CAAC;UAE3G,MAAMyI,iBAAiB,GAAG,IAAI/B,MAAM,CAACgC,kBAAkB,CAAC;YACtDrE,GAAG,EAAEA,GAAG;YACRrE,eAAe,EAAEwI;UACnB,CAAC,CAAC;UACFd,qBAAqB,CAACiB,IAAI,CAACF,iBAAiB,CAAC;UAE7C5B,iBAAiB,CAAC+B,KAAK,CAACP,OAAO,EAAE,CAACQ,MAAM,EAAEC,MAAM,KAAK;YACnD,IAAIA,MAAM,KAAK,IAAI,EAAE;cACnBL,iBAAiB,CAACM,aAAa,CAACF,MAAM,CAAC;YACzC;UACF,CAAC,CAAC;QACJ,CAAC,MAAM,IAAIhB,OAAO,CAACG,IAAI,KAAK,MAAM,EAAE;UAClC,IAAIgB,OAAO,GAAGpC,SAAS,CAACgB,QAAQ,CAACE,KAAK,GAAG,CAAC,CAAC;UAC3C,IAAIkB,OAAO,CAAChB,IAAI,KAAK,MAAM,EAAE;YAC3BgB,OAAO,GAAGpC,SAAS,CAACgB,QAAQ,CAACE,KAAK,GAAG,CAAC,CAAC;YACvCH,OAAO,GAAG,IAAI;UAChB;UACA,MAAMQ,YAAY,GAAGjB,aAAa,CAAC8B,OAAO,CAACd,IAAI,CAAC;UAChD,MAAMe,OAAO,GAAGrC,SAAS,CAACgB,QAAQ,CAACE,KAAK,GAAG,CAAC,CAAC;UAC7C,MAAMG,cAAc,GAAGf,aAAa,CAAC+B,OAAO,CAACb,EAAE,CAAC;UAEhD,MAAMC,OAAO,GAAG;YACd3H,MAAM,EAAE;cAAEhB,GAAG,EAAE4I,UAAU,CAACL,cAAc,CAACnE,QAAQ,CAAC;cAAEnE,GAAG,EAAE2I,UAAU,CAACL,cAAc,CAAClE,SAAS;YAAE,CAAC;YAC/FnD,WAAW,EAAE;cAAElB,GAAG,EAAE4I,UAAU,CAACH,YAAY,CAACrE,QAAQ,CAAC;cAAEnE,GAAG,EAAE2I,UAAU,CAACH,YAAY,CAACpE,SAAS;YAAE,CAAC;YAChGwE,UAAU,EAAE,SAAS;YACrBW,cAAc,EAAE;cACdC,iBAAiB,EAAE;YACrB;UACF,CAAC;UAED,MAAMV,iBAAiB,GAAG,IAAI/B,MAAM,CAACgC,kBAAkB,CAAC;YAAErE,GAAG,EAAEA;UAAI,CAAC,CAAC;UACrEqD,qBAAqB,CAACiB,IAAI,CAACF,iBAAiB,CAAC;UAE7C5B,iBAAiB,CAAC+B,KAAK,CAACP,OAAO,EAAE,CAACQ,MAAM,EAAEC,MAAM,KAAK;YACnD,IAAIA,MAAM,KAAK,IAAI,EAAE;cACnBL,iBAAiB,CAACM,aAAa,CAACF,MAAM,CAAC;YACzC;UACF,CAAC,CAAC;QACJ;MACF,CAAC,MAAM;QACLlB,OAAO,GAAG,KAAK;MACjB;IAEF,CAAC,CAAC;IAEFlB,qBAAqB,CAACiB,qBAAqB,CAAC;EAC9C,CAAC;AACH;AAACnB,GAAA,CA1GQzD,YAAY;EAAA,QAEJ9D,cAAc,EACjBD,MAAM;AAAA;AAAAqK,GAAA,GAHXtG,YAAY;AA4GrB,MAAMuG,eAAe,GAAIC,WAAW,IAAK;EACvC,QAAQA,WAAW;IACjB,KAAK,gBAAgB;MACnB,OAAO,gBAAgB;IACzB,KAAK,kBAAkB;MACrB,OAAO,kBAAkB;IAC3B,KAAK,aAAa;MAChB,OAAO,qBAAqB;IAC9B;MACE,OAAO,EAAE;EACb;AACF,CAAC;AAED,SAAS1G,UAAUA,CAAC;EAAE5B,UAAU;EAAE6B,WAAW;EAAET;AAAY,CAAC,EAAE;EAC5D,MAAMmH,KAAK,GAAG,EAAE;EAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3G,WAAW,CAACqD,MAAM,EAAEsD,CAAC,EAAE,EAAE;IAC3C,MAAMC,aAAa,GAAGzI,UAAU,CAAC6B,WAAW,CAAC2G,CAAC,CAAC,CAACpD,MAAM,GAAG,CAAC,CAAC;IAC3D,IAAIsD,SAAS,GAAGD,aAAa,CAAC7B,QAAQ,CAACvD,GAAG,CAAC,CAACwD,OAAO,EAAEC,KAAK,KAAK;MAAA,IAAA6B,cAAA,EAAAC,oBAAA;MAC7D,IAAIC,WAAW,GAAG,EAAE;MACpB,MAAMC,SAAS,IAAAH,cAAA,GAAG9B,OAAO,CAACkC,KAAK,cAAAJ,cAAA,wBAAAC,oBAAA,GAAbD,cAAA,CAAeK,KAAK,cAAAJ,oBAAA,uBAApBA,oBAAA,CAAsBK,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC;MACzD,IAAIpC,OAAO,CAACG,IAAI,KAAK,MAAM,EAAE;QAC3B6B,WAAW,gBACT1K,OAAA;UAAiBmC,SAAS,EAAC,SAAS;UAAAC,QAAA,GAAC,SACjC,eAAApC,OAAA;YAAAoC,QAAA,EAAQ;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,MAAE,eAAAzC,OAAA;YAAAoC,QAAA,EAAIuI;UAAS;YAAArI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,MAAE,EAACiG,OAAO,CAACkC,KAAK,CAACG,SAAS,CAACC,MAAM,EAAC,aAAW,EAACtC,OAAO,CAACe,KAAK,CAACwB,GAAG;QAAA,GADnGtC,KAAK;UAAArG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN;MACH,CAAC,MAAM,IAAIiG,OAAO,CAACG,IAAI,KAAK,MAAM,EAAE;QAAA,IAAAqC,WAAA,EAAAC,gBAAA;QAClCT,WAAW,gBACT1K,OAAA;UAAiBmC,SAAS,EAAC,SAAS;UAAAC,QAAA,GAAC,SACjC,eAAApC,OAAA;YAAAoC,QAAA,EAAQ;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,MAAE,eAAAzC,OAAA;YAAAoC,QAAA,EAAIuI;UAAS;YAAArI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,MAAE,EAACiG,OAAO,CAACkC,KAAK,CAACG,SAAS,CAACK,OAAO,EAAC,MAC/E,EAAC,EAAAF,WAAA,GAAAxC,OAAO,CAACO,EAAE,cAAAiC,WAAA,wBAAAC,gBAAA,GAAVD,WAAA,CAAYjD,IAAI,cAAAkD,gBAAA,uBAAhBA,gBAAA,CAAkBE,OAAO,kBACxBrL,OAAA;YAAMmC,SAAS,EAAE+H,eAAe,CAACxB,OAAO,CAACO,EAAE,CAAChB,IAAI,CAACoD,OAAO,CAAE;YAAAjJ,QAAA,GACvD,GAAG,EAAC,GACJ,EAACsG,OAAO,CAACO,EAAE,CAAChB,IAAI,CAACoD,OAAO,EAAC,GAC5B;UAAA;YAAA/I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CACP;QAAA,GAPOkG,KAAK;UAAArG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQV,CACN;MACH,CAAC,MAAM,IAAIiG,OAAO,CAACG,IAAI,KAAK,UAAU,EAAE;QAAA,IAAAyC,YAAA,EAAAC,iBAAA;QACtCb,WAAW,gBACT1K,OAAA;UAAiBmC,SAAS,EAAC,SAAS;UAAAC,QAAA,GAAC,SACjC,eAAApC,OAAA;YAAAoC,QAAA,EAAQ;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,MAAE,eAAAzC,OAAA;YAAAoC,QAAA,EAAIuI;UAAS;YAAArI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAAW,EAACiG,OAAO,CAACkC,KAAK,CAACG,SAAS,CAACK,OAAO,EAAC,iBAAe,EAAC1C,OAAO,CAACkC,KAAK,CAACG,SAAS,CAACS,OAAO,EAAC,MAC5I,EAAC,EAAAF,YAAA,GAAA5C,OAAO,CAACO,EAAE,cAAAqC,YAAA,wBAAAC,iBAAA,GAAVD,YAAA,CAAYrD,IAAI,cAAAsD,iBAAA,uBAAhBA,iBAAA,CAAkBF,OAAO,kBACxBrL,OAAA;YAAMmC,SAAS,EAAE+H,eAAe,CAACxB,OAAO,CAACO,EAAE,CAAChB,IAAI,CAACoD,OAAO,CAAE;YAAAjJ,QAAA,GACvD,GAAG,EAAC,GACJ,EAACsG,OAAO,CAACO,EAAE,CAAChB,IAAI,CAACoD,OAAO,EAAC,GAC5B;UAAA;YAAA/I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CACP;QAAA,GAPOkG,KAAK;UAAArG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQV,CACN;MACH;MACA,OAAOiI,WAAW;IACpB,CAAC,CAAC;IAEFN,KAAK,CAACZ,IAAI,CAAC;MACTiC,EAAE,EAAEpB,CAAC,GAAG,CAAC;MACTqB,KAAK,EAAE,QAAQ,IAAIrB,CAAC,GAAG,CAAC,CAAC;MACzBsB,WAAW,eACT3L,OAAA;QAAAoC,QAAA,gBACEpC,OAAA;UAAAoC,QAAA,gBAAKpC,OAAA;YAAAoC,QAAA,EAAQ;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACiB,WAAW,CAAC2G,CAAC,CAAC,CAACuB,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAvJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpEzC,OAAA;UAAAoC,QAAA,gBAAKpC,OAAA;YAAAoC,QAAA,EAAQ;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACiB,WAAW,CAAC2G,CAAC,CAAC,CAACyB,gBAAgB,EAAC,QAAM,EAACpI,WAAW,CAAC2G,CAAC,CAAC,CAAC0B,kBAAkB,EAAC,iBAAe;QAAA;UAAAzJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnIzC,OAAA;UAAKmC,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAEmI;QAAS;UAAAjI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAET,CAAC,CAAC;EACJ;EAEA,MAAMuJ,WAAW,GAAIrD,KAAK,IAAK;IAC7B1F,WAAW,CAACS,WAAW,CAACiF,KAAK,GAAG,CAAC,CAAC,CAAC1B,MAAM,GAAG,CAAC,CAAC;EAChD,CAAC;EAED,oBACEjH,OAAA;IAAKmC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BgI,KAAK,CAAClF,GAAG,CAAE+G,IAAI,iBACdjM,OAAA;MAAmBmC,SAAS,EAAC,MAAM;MAAC+E,OAAO,EAAEA,CAAA,KAAM8E,WAAW,CAACC,IAAI,CAACR,EAAE,CAAE;MAAArJ,QAAA,gBACtEpC,OAAA;QAAAoC,QAAA,EAAK6J,IAAI,CAACP;MAAK;QAAApJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBzC,OAAA;QAAAoC,QAAA,EAAM6J,IAAI,CAACN;MAAW;QAAArJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GAFrBwJ,IAAI,CAACR,EAAE;MAAAnJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACyJ,GAAA,GArEQzI,UAAU;AAuEnB,eAAepC,GAAG;AAAC,IAAAuC,EAAA,EAAAiB,GAAA,EAAAO,GAAA,EAAA+B,GAAA,EAAA8C,GAAA,EAAAiC,GAAA;AAAAC,YAAA,CAAAvI,EAAA;AAAAuI,YAAA,CAAAtH,GAAA;AAAAsH,YAAA,CAAA/G,GAAA;AAAA+G,YAAA,CAAAhF,GAAA;AAAAgF,YAAA,CAAAlC,GAAA;AAAAkC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}